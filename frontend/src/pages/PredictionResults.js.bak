import React from 'react';
import { useLocation, Link } from 'react-router-dom';
import { Bar } from 'react-chartjs-2';
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  BarElement,
  Title,
  Tooltip,
  Legend,
} from 'chart.js';
import './PredictionResults.css';

// Register ChartJS components
ChartJS.register(
  CategoryScale,
  LinearScale,
  BarElement,
  Title,
  Tooltip,
  Legend
);

const PredictionResults = () => {
  const location = useLocation();
  const prediction = location.state?.prediction;
  
  // If no prediction data, show error
  if (!prediction) {
    return (
      <div className="no-results">
        <h2>No prediction data available</h2>
        <p>Please make a prediction first.</p>
        <Link to="/predict" className="button">Make a Prediction</Link>
      </div>
    );
  }
  
  // Prepare data for chart
  const chartData = {
    labels: prediction.predictions.map(p => p.time_slot),
    datasets: [
      {
        label: 'Predicted Demand (Tickets)',
        data: prediction.predictions.map(p => p.predicted_demand),
        backgroundColor: 'rgba(75, 192, 192, 0.6)',
        borderColor: 'rgba(75, 192, 192, 1)',
        borderWidth: 1,
      },
      {
        label: 'Buses Needed',
        data: prediction.predictions.map(p => p.buses_needed),
        backgroundColor: 'rgba(153, 102, 255, 0.6)',
        borderColor: 'rgba(153, 102, 255, 1)',
        borderWidth: 1,
      },
    ],
  };
  
  const chartOptions = {
    responsive: true,
    plugins: {
      legend: {
        position: 'top',
      },
      title: {
        display: true,
        text: 'Predicted Demand by Time Slot',
      },
    },
    scales: {
      y: {
        beginAtZero: true,
      },
    },
  };

  return (
    <div className="prediction-results">
      <h1>Prediction Results</h1>
      
      <div className="summary-card">
        <h2>Route Summary</h2>
        <p><strong>From:</strong> {prediction.route.start.name}</p>
        <p><strong>To:</strong> {prediction.route.end.name}</p>
        <p><strong>Time Period:</strong> {prediction.time_period.replace('_', ' ')}</p>
        <p><strong>Occasion:</strong> {prediction.occasion}</p>
        <p><strong>Season:</strong> {prediction.season}</p>
        <div className="totals">
          <div className="total-item">
            <span className="total-label">Total Predicted Demand:</span>
            <span className="total-value">{prediction.total_predicted_demand} tickets</span>
          </div>
          <div className="total-item">
            <span className="total-label">Total Buses Needed:</span>
            <span className="total-value">{prediction.total_buses_needed} buses</span>
          </div>
        </div>
      </div>
      
      <div className="chart-container">
        <Bar data={chartData} options={chartOptions} />
      </div>
      
      <div className="detailed-results">
        <h2>Detailed Predictions</h2>
        <div className="results-grid">
          {prediction.predictions.map((pred, index) => (
            <div key={index} className="result-card">
              <h3>{pred.time_slot}</h3>
              <p><strong>Predicted Demand:</strong> {pred.predicted_demand} tickets</p>
              <p><strong>Buses Needed:</strong> {pred.buses_needed}</p>
            </div>
          ))}
        </div>
      </div>
      
      <div className="actions">
        <Link to="/predict" className="button">Make Another Prediction</Link>
      </div>
    </div>
  );
};

export default PredictionResults;
